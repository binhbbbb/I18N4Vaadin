package ${packageName};

import com.github.peholmst.i18n4vaadin.util.I18NHolder;
import java.text.MessageFormat;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;
import javax.annotation.Generated;

/**
 * Please note that this class is not thread safe! Invocations from multiple
 * threads must be synchronized!
 */
@Generated(value = "${generator}", date = "${generationDate}")
public class ${className} implements java.io.Serializable {

    protected Locale getLocale() {
        return I18NHolder.get().getLocale();
    }

    protected ResourceBundle getBundle() {
        return ResourceBundle.getBundle("${packageName}.${bundleName}", getLocale());
    }

#foreach ($message_key in ${messages.allMessageKeys})
    public String $message_key.replace('.','_')(Object... args) {
        return getMessage("$message_key", args);
    }
#end

    public static final class Keys {

        private Keys() {
        }
#foreach ($message_key in ${messages.allMessageKeys})
        public static final String $message_key.replace('.','_') = "$message_key";
#end
    }

    public String getMessage(String key, Object... args) {
        try {
            final MessageFormat mf = new MessageFormat(getBundle().getString(key), getLocale());
            return mf.format(args, new StringBuffer(), null).toString();
        } catch (MissingResourceException e) {
            return "!" + key;
        }
    }

    public static String getMessage(String key, Locale locale, Object... args) {
        try {
            ResourceBundle bundle = ResourceBundle.getBundle("${packageName}.${bundleName}", locale);
            final MessageFormat mf = new MessageFormat(bundle.getString(key), locale);
            return mf.format(args, new StringBuffer(), null).toString();
        } catch (MissingResourceException e) {
            return "!" + key;
        }
    }
}
